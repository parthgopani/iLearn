<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>2.11  Comments</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part37.htm">&lt; Previous</a><span> | </span><a href="../pythonlearn.html">Contents</a><span> | </span><a href="part39.htm">Next &gt;</a></p><h3 style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark53">2.11  Comments</a><a name="bookmark78">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">As programs get bigger and more complicated, they get more difficult to read. Formal languages are dense, and it is often difficult to look at a piece of code and figure out what it is doing, or why.</p><p style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;">For this reason, it is a good idea to add notes to your programs to explain in natural language what the program is doing. These notes are called <span class="s5">comments</span>, and in Python they start with the <span class="s3"># </span>symbol:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 7pt;text-indent: 0pt;text-align: left;"># compute the percentage of the hour that has elapsed</p><p class="s3" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">percentage <span style=" color: #656565;">= </span>(minute <span style=" color: #656565;">* </span><span style=" color: #3FA070;">100</span>) <span style=" color: #656565;">/ </span><span style=" color: #3FA070;">60</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: justify;">In this case, the comment appears on a line by itself. You can also put comments at the end of a line:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">percentage <span style=" color: #656565;">= </span>(minute <span style=" color: #656565;">* </span><span style=" color: #3FA070;">100</span>) <span style=" color: #656565;">/ </span><span style=" color: #3FA070;">60    </span><span class="s27"># percentage of an hour</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">Everything from the <span class="s3"># </span>to the end of the line is ignored; it has no effect on the program.</p><p style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;">Comments are most useful when they document non-obvious features of the code. It is reasonable to assume that the reader can figure out <span class="s5">what </span>the code does; it is much more useful to explain <span class="s5">why</span>.</p><p style="padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;">This comment is redundant with the code and useless:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">v <span style=" color: #656565;">= </span><span style=" color: #3FA070;">5   </span><span class="s27"># assign 5 to v</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">This comment contains useful information that is not in the code:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">v <span style=" color: #656565;">= </span><span style=" color: #3FA070;">5    </span><span class="s27"># velocity in meters/second.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: justify;">Good variable names can reduce the need for comments, but long names can make complex expressions hard to read, so there is a trade-off.</p><p class="s5" style="padding-top: 1pt;padding-left: 52pt;text-indent: 0pt;text-align: left;"><a name="bookmark79">2.12. CHOOSING MNEMONIC VARIABLE NAMES</a><span class="s11">             </span><span class="p">27</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part37.htm">&lt; Previous</a><span> | </span><a href="../pythonlearn.html">Contents</a><span> | </span><a href="part39.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
