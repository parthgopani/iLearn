<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>1.7  Writing a program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part13.htm">&lt; Previous</a><span> | </span><a href="../pythonlearn.html">Contents</a><span> | </span><a href="part15.htm">Next &gt;</a></p><h3 style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="bookmark9">1.7  Writing a program</a><a name="bookmark30">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: justify;">Typing commands into the Python interpreter is a great way to experiment with Python’s features, but it is not recommended for solving more complex problems.</p><p style="padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;">When we want to write a program, we use a text editor to write the Python instructions into a file, which is called a <span class="s5">script</span>. By convention, Python scripts have names that end with <span class="s3">.py</span>.</p><p style="padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;">To execute the script, you have to tell the Python interpreter the name of the file. In a command window, you would type <span class="s3">python hello.py </span>as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">$ <span class="s23">cat </span>hello.py</p><p class="s3" style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><span class="s23">print</span>(<span style=" color: #3F70A0;">&#39;Hello world!&#39;</span>)</p><p class="s3" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">$ <span class="s23">python </span>hello.py</p><p class="s23" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">Hello <span class="s3">world!</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">The “$” is the operating system prompt, and the “cat hello.py” is showing us that the file “hello.py” has a one-line Python program to print a string.</p><p style="padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">We call the Python interpreter and tell it to read its source code from the file “hello.py” instead of prompting us for lines of Python code interactively.</p><p style="padding-top: 6pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;">You will notice that there was no need to have <span class="s5">quit() </span>at the end of the Python program in the file. When Python is reading your source code from a file, it knows to stop when it reaches the end of the file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part13.htm">&lt; Previous</a><span> | </span><a href="../pythonlearn.html">Contents</a><span> | </span><a href="part15.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
