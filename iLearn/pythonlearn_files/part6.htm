<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>1.4  Words and sentences</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part10.htm">&lt; Previous</a><span> | </span><a href="../pythonlearn.html">Contents</a><span> | </span><a href="part12.htm">Next &gt;</a></p><h3 style="padding-left: 51pt;text-indent: 0pt;text-align: left;"><a name="bookmark6">1.4  Words and sentences</a><a name="bookmark24">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 51pt;text-indent: 0pt;text-align: justify;">Unlike human languages, the Python vocabulary is actually pretty small. We call this “vocabulary” the “reserved words”. These are words that have very special meaning to Python. When Python sees these words in a Python program, they have one and only one meaning to Python. Later as you write programs you will make up your own words that have meaning to you called <span class="s5">variables</span>. You will have great latitude in choosing your names for your variables, but you cannot use any of Python’s reserved words as a name for a variable.</p><p style="padding-top: 5pt;padding-left: 50pt;text-indent: 0pt;text-align: justify;">When we train a dog, we use special words like “sit”, “stay”, and “fetch”. When you talk to a dog and don’t use any of the reserved words, they just look at you with a quizzical look on their face until you say a reserved word. For example, if you say, “I wish more people would walk to improve their overall health”, what most dogs likely hear is, “blah blah blah <span class="s5">walk </span><a href="part10.htm#bookmark25" class="s4">blah blah blah blah.” That is because “walk” is a reserved word in dog language. Many might suggest that the language between humans and cats has no reserved words</a><span style=" color: #00F; font-family:&quot;Eras Medium ITC&quot;, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 3pt;">1</span>.</p><p style="padding-top: 5pt;padding-left: 52pt;text-indent: 0pt;text-align: justify;">The reserved words in the language where humans talk to Python include the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:49.5002pt" cellspacing="0"><tr style="height:10pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">and</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">del</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 9pt;text-align: left;">global</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 9pt;text-align: left;">not</p></td><td style="width:35pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 9pt;text-align: left;">with</p></td></tr><tr style="height:11pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">as</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">elif</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;">if</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">or</p></td><td style="width:35pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">yield</p></td></tr><tr style="height:11pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">assert</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">else</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;">import</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">pass</p></td><td style="width:35pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">break</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">except</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;">in</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">raise</p></td><td style="width:35pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">class</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">finally</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;">is</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">return</p></td><td style="width:35pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">continue</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">for</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 10pt;text-align: left;">lambda</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">try</p></td><td style="width:35pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:10pt"><td style="width:45pt"><p class="s18" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">def</p></td><td style="width:45pt"><p class="s18" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">from</p></td><td style="width:54pt"><p class="s18" style="padding-left: 7pt;text-indent: 0pt;line-height: 9pt;text-align: left;">nonlocal</p></td><td style="width:47pt"><p class="s18" style="padding-left: 9pt;text-indent: 0pt;line-height: 9pt;text-align: left;">while</p></td><td style="width:35pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 1pt;text-align: justify;">That is it, and unlike a dog, Python is already completely trained. When you say “try”, Python will try every time you say it without fail.</p><p style="padding-top: 5pt;padding-bottom: 4pt;padding-left: 51pt;text-indent: 0pt;text-align: justify;">We will learn these reserved words and how they are used in good time, but for now we will focus on the Python equivalent of “speak” (in human-to-dog language). The nice thing about telling Python to speak is that we can even tell it what to say by giving it a message in quotes:</p><p style="padding-left: 52pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="190" height="1" alt="image" src="Image_006.png"/></span></p><p style="padding-left: 63pt;text-indent: 0pt;text-align: left;"><a href="http://xkcd.com/231/" style=" color: #231F20; font-family:&quot;Bookman Old Style&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; vertical-align: 3pt;" target="_blank">1</a><a href="http://xkcd.com/231/" class="s19" target="_blank">http://xkcd.com/231/</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="bookmark26">print(</a><span style=" color: #3F70A0;">&#39;Hello world!&#39;</span>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: justify;">And we have even written our first syntactically correct Python sentence. Our sentence starts with the function <span class="s5">print </span>followed by a string of text of our choosing enclosed in single quotes. The strings in the print statements are enclosed in quotes. Single quotes and double quotes do the same thing; most people use single quotes except in cases like this where a single quote (which is also an apostrophe) appears in the string.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part10.htm">&lt; Previous</a><span> | </span><a href="../pythonlearn.html">Contents</a><span> | </span><a href="part12.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
